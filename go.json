{
  // Place your snippets for go here. Each snippet is defined under a snippet name and has a prefix, body and
  // description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
  // $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. Placeholders with the
  // same ids are connected.
  // Example:
  // "Print to console": {
  // 	"prefix": "log",
  // 	"body": [
  // 		"console.log('$1');",
  // 		"$2"
  // 	],
  // 	"description": "Log output to console"
  // }

  "ebiten run": {
    "prefix": "ebitenrun",
    "body": [
      "if err := ebiten.Run(${1:update}, ${2:screenWidth}, ${3:screenHeight}, ${4:1}); err != nil {",
      "   log.Fatal(${5:err})",
      "}"
    ]
  },

  "ebiten base template": {
    "prefix": "ebitenbase",
    "body": [
      "const (",
      "   screenWidth, screenHeight = ${1:640},${2:480}",
      ")",
      "",
      "func update(screen *ebiten.Image) error {",
      "   $0",
      "   return nil",
      "}",
      "",
      "",
      "func main() {",
      "   if err := ebiten.Run(${3:update}, ${4:screenWidth}, ${5:screenHeight}, ${6:1}, ${7:\"my application\"}); err != nil {",
      "      log.Fatal(${8:err})",
      "   }",
      "}"
    ],
    "description": "Base layout for an ebiten application"
  }
}
